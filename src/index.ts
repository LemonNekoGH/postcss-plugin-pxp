import parseValue from "postcss-value-parser";
import type { AcceptedPlugin } from "postcss";

// FIXME: code generated by @apply won't be transpiled to `calc`
export function customUnitPxp(
  variableName: string,
  defaultValue: string,
): AcceptedPlugin {
  return {
    postcssPlugin: "custom-unit-pxp",
    Declaration: (declaration) => {
      if (!declaration.value.includes("pxp")) return;
      const declarationAST = parseValue(declaration.value);
      declarationAST.walk((node) => {
        if (node.type !== "word") return;
        if (!node.value.endsWith("pxp")) return;

        const value = node.value.slice(0, -3);
        Object.assign(node, {
          type: "function",
          value: "calc",
          nodes: [
            {
              type: "word",
              value: `${value}px`,
            },
            {
              type: "space",
              value: " ",
            },
            {
              type: "space",
              value: "*",
            },
            {
              type: "space",
              value: " ",
            },
            {
              type: "function",
              value: "var",
              nodes: [
                {
                  type: "word",
                  value: variableName,
                },
              ],
            },
            {
              type: "space",
              value: " ",
            },
            {
              type: "word",
              value: "/",
            },
            {
              type: "space",
              value: " ",
            },
            {
              type: "word",
              value: defaultValue,
            },
          ],
        });
      });

      declaration.value = declarationAST.toString();
    },
  };
}
