"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.customUnitPxp = customUnitPxp;
var postcss_value_parser_1 = require("postcss-value-parser");
// FIXME: code generated by @apply won't be transpiled to `calc`
function customUnitPxp(variableName, defaultValue) {
    return {
        postcssPlugin: "custom-unit-pxp",
        Declaration: function (declaration) {
            if (!declaration.value.includes("pxp"))
                return;
            var declarationAST = (0, postcss_value_parser_1.default)(declaration.value);
            declarationAST.walk(function (node) {
                if (node.type !== "word")
                    return;
                if (!node.value.endsWith("pxp"))
                    return;
                var value = node.value.slice(0, -3);
                Object.assign(node, {
                    type: "function",
                    value: "calc",
                    nodes: [
                        {
                            type: "word",
                            value: "".concat(value, "px"),
                        },
                        {
                            type: "space",
                            value: " ",
                        },
                        {
                            type: "space",
                            value: "*",
                        },
                        {
                            type: "space",
                            value: " ",
                        },
                        {
                            type: "function",
                            value: "var",
                            nodes: [
                                {
                                    type: "word",
                                    value: variableName,
                                },
                            ],
                        },
                        {
                            type: "space",
                            value: " ",
                        },
                        {
                            type: "word",
                            value: "/",
                        },
                        {
                            type: "space",
                            value: " ",
                        },
                        {
                            type: "word",
                            value: defaultValue,
                        },
                    ],
                });
            });
            declaration.value = declarationAST.toString();
        },
    };
}
